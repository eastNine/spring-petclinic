{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualNetworks_dev_network_vnet_externalid": {
      "defaultValue": "/subscriptions/a2fca15a-3d49-4e8f-bf6d-76fd4c0d455d/resourceGroups/dev-network/providers/Microsoft.Network/virtualNetworks/dev-network-vnet",
      "type": "String"
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "agwRGName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "agwName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "vmssName": {
      "type": "string",
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-61 characters in length and globally unique across Azure. A hash is prepended to this string for some resources, and resource-specific information is appended."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "capacity": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (20 or less)."
      },
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 20
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "administratorPublicKey": {
      "type": "string",
      "metadata": {
        "description": "Specifies the SSH rsa public key file as a string. Use \"ssh-keygen -t rsa -b 2048\" to generate your SSH key pairs."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "imageName": {
      "type": "string",
      "metadata": {
        "description": "Image Name"
      }
    },
    "bepoolName": {
      "type": "string",
      "metadata": {
        "description": "prod backend pool name"
      }
    },
    "tag_name": {
      "type": "string",
      "metadata": {
        "description": "resource name tag"
      }
    },
    "tag_service": {
      "type": "string",
      "metadata": {
        "description": "service tag"
      }
    },
    "tag_usecase": {
      "type": "string",
      "metadata": {
        "description": "usecase tag"
      }
    },
    "tag_billing": {
      "type": "string",
      "metadata": {
        "description": "billing tag"
      }
    }
  },
  "variables": {
    "subnetName": "dev-tour",
    "nicName": "[concat(parameters('vmssName'), '-nic')]",
    "ipConfigName": "[concat(parameters('vmssName'), '-ipconfig')]",
    "service": "service1",
    "usecase": "usecase1",
    "billing": "billing1"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "name": "[parameters('vmssName')]",
      "location": "[parameters('location')]",
      "apiVersion": "2020-06-01",
      // "dependsOn": [
      //   "[resourceId('Microsoft.Network/applicationGateways', parameters('agwName'))]"
      // ],
      "tags": {
        "[parameters('tag_name')]": "virtualMachineScaleSets",
        "[parameters('tag_service')]": "[variables('service')]",
        "[parameters('tag_usecase')]": "[variables('usecase')]",
        "[parameters('tag_billing')]": "[variables('billing')]"
      },
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('capacity')]"
      },
      "properties": {
        "singlePlacementGroup": true,
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "scaleInPolicy": {
          "rules": ["Default"]
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "id": "[parameters('imageName')]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('administratorPublicKey')]"
                  }
                ]
              },
              "provisionVMAgent": true
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "[variables('nicName')]",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "[variables('ipConfigName')]",
                      "properties": {
                        "subnet": {
                          "id": "[concat(parameters('virtualNetworks_dev_network_vnet_externalid'), '/subnets/', variables('subnetName'))]"
                        },
                        "privateIPAddressVersion": "IPv4",
                        "applicationGatewayBackendAddressPools": [
                          {
                            "id": "[resourceId('a2fca15a-3d49-4e8f-bf6d-76fd4c0d455d',parameters('agwRGName'),'Microsoft.Network/applicationGateways/backendAddressPools', parameters('agwName'), parameters('bepoolName'))]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "healthRepairExtension",
                "properties": {
                  "autoUpgradeMinorVersion": false,
                  "publisher": "Microsoft.ManagedServices",
                  "type": "ApplicationHealthLinux",
                  "typeHandlerVersion": "1.0",
                  "settings": {
                    "protocol": "http",
                    "port": 8080,
                    "requestPath": "/"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets/extensions",
      "apiVersion": "2019-07-01",
      "name": "[concat(parameters('vmssName'), '/healthRepairExtension')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachineScaleSets', parameters('vmssName'))]"
      ],
      "properties": {
        "provisioningState": "Succeeded",
        "autoUpgradeMinorVersion": false,
        "publisher": "Microsoft.ManagedServices",
        "type": "ApplicationHealthLinux",
        "typeHandlerVersion": "1.0",
        "settings": {
          "protocol": "http",
          "port": 8080,
          "requestPath": "/"
        }
      }
    }
  ]
}
